{"version":3,"file":"popup.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClvkBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACVA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;;;;;AEAA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/asserts/tailwind.css","webpack:///./src/asserts/tailwind.css?5bd1","webpack:///./src/popup/index.tsx","webpack:///./src/popup/popup.slice.tsx","webpack:///./src/popup/popup.tsx","webpack:///./src/popup/store.tsx","webpack:///webpack/bootstrap","webpack:///webpack/runtime/chunk loaded","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/create fake namespace object","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/harmony module decorator","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/runtime/nonce","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\r\nbody{\r\n    width: 200px;\r\n    height: 100px;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/asserts/tailwind.css\"],\"names\":[],\"mappings\":\";AACA;IACI,YAAY;IACZ,aAAa;AACjB\",\"sourcesContent\":[\"\\r\\nbody{\\r\\n    width: 200px;\\r\\n    height: 100px;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tailwind.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./tailwind.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createRoot } from \"react-dom/client\";\nimport Popup from \"./popup\";\nimport { store } from \"./store\";\nimport { Provider } from 'react-redux';\nconst App = () => {\n    const container = document.createElement(\"div\");\n    document.body.appendChild(container);\n    if (!container) {\n        throw new Error(\"Can not find Container\");\n    }\n    const root = createRoot(container);\n    root.render(\n    // <React.StrictMode>\n    _jsx(Provider, { store: store, children: _jsx(Popup, {}) })\n    // </React.StrictMode>\n    );\n};\nexport default App();\n","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n    khachHangList: [],\n    tenKH: \"\",\n    selectedBG: null,\n    selectedKH: null,\n    checkOption: [0, 1, 2],\n};\nexport const popupSlice = createSlice({\n    name: \"popup\",\n    initialState,\n    reducers: {\n        setKhachHangs: (state, action) => {\n            action.payload.forEach((m) => {\n                m.countState.countChapNhan = m.BuuGuis.filter((m) => m.TrangThai === \"Đã chấp nhận\").length;\n                m.countState.countDangGom = m.BuuGuis.filter((m) => m.TrangThai === \"Đang đi thu gom\").length;\n                m.countState.countNhanHang = m.BuuGuis.filter((m) => m.TrangThai === \"Nhận hàng thành công\").length;\n                m.countState.countPhanHuong = m.BuuGuis.filter((m) => m.TrangThai === \"Đã phân hướng\").length;\n            });\n            state.khachHangList = action.payload;\n            state.selectedKH = null;\n            state.selectedBG = null;\n        },\n        setSelectedKH: (state, action) => {\n            state.selectedKH = action.payload;\n            state.selectedBG = null;\n            //thuc hien chuyen doi du lieu trong nay\n        },\n        setSelectedBG: (state, action) => {\n            state.selectedBG = action.payload;\n        },\n        clearData: (_state) => {\n            _state = initialState;\n        },\n        setCheckChange: (state, action) => {\n            state.checkOption = action.payload;\n        },\n        sortNumber: (state) => {\n            //thuc hien sort trong nay\n            if (state.selectedKH?.BuuGuis) {\n                const small = state.selectedKH?.BuuGuis.filter(m => Number(m.KhoiLuong) < 2000);\n                const large = state.selectedKH?.BuuGuis.filter(m => Number(m.KhoiLuong) >= 2000);\n                small.sort((a, b) => Number(b.MaBuuGui.substring(9, 11)) - Number(a.MaBuuGui.substring(9, 11)) || Number(b.MaBuuGui.substring(8, 9)) - Number(a.MaBuuGui.substring(8, 9)));\n                large.sort((a, b) => Number(b.MaBuuGui.substring(9, 11)) - Number(a.MaBuuGui.substring(9, 11)) || Number(b.MaBuuGui.substring(8, 9)) - Number(a.MaBuuGui.substring(8, 9)));\n                state.selectedKH.BuuGuis = large.concat(small);\n                for (let i = 0; i < state.selectedKH?.BuuGuis?.length; i++) {\n                    state.selectedKH.BuuGuis[i].index = i + 1;\n                }\n                state.selectedBG = state.selectedKH.BuuGuis[0];\n            }\n        },\n        sortWeight: (state) => {\n            if (state.selectedKH?.BuuGuis) {\n                state.selectedKH?.BuuGuis.sort((a, b) => Number(b.KhoiLuong) - Number(a.KhoiLuong));\n                for (let i = 0; i < state.selectedKH?.BuuGuis?.length; i++) {\n                    state.selectedKH.BuuGuis[i].index = i + 1;\n                }\n                state.selectedBG = state.selectedKH.BuuGuis[0];\n            }\n        },\n    },\n});\nexport const { sortNumber, sortWeight, setKhachHangs, setCheckChange, clearData, setSelectedBG, setSelectedKH } = popupSlice.actions;\nexport default popupSlice.reducer;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport \"../asserts/tailwind.css\";\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, onValue, set, } from \"firebase/database\";\n// THAY ĐỔI: Thay đổi icon và loại bỏ xlsx\nimport { RedoOutlined, CopyOutlined, SendOutlined, EditOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Button, Space, Input, Modal } from \"antd\";\nimport { useEffect, useState } from \"react\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAs9RtsXMRPeD5vpORJcWLDb1lEJZ3nUWI\",\n    authDomain: \"xonapp.firebaseapp.com\",\n    databaseURL: \"https://xonapp-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"xonapp\",\n    storageBucket: \"xonapp.appspot.com\",\n    messagingSenderId: \"892472148061\",\n    appId: \"1:892472148061:web:f22a5c4ffd25858726cdb4\"\n};\nexport default function Popup() {\n    const [errorRecords, setErrorRecords] = useState(null);\n    const [maHieu, setMaHieu] = useState(\"\");\n    const [firebaseKey, setFirebaseKey] = useState(\"\");\n    const [currentFirebaseKey, setCurrentFirebaseKey] = useState(\"\");\n    const [isKeyModalVisible, setIsKeyModalVisible] = useState(false);\n    const [isKeySetupComplete, setIsKeySetupComplete] = useState(false);\n    // Load Firebase key from storage on mount\n    useEffect(() => {\n        chrome.storage.local.get(['firebase_key'], (result) => {\n            const savedKey = result.firebase_key || \"\";\n            console.log(\"Loaded Firebase key from storage:\", savedKey);\n            setCurrentFirebaseKey(savedKey);\n            setFirebaseKey(savedKey);\n            setIsKeySetupComplete(!!savedKey);\n        });\n    }, []);\n    // Dynamic Firebase path based on key\n    const getFirebasePath = (path) => {\n        const key = currentFirebaseKey;\n        return key ? `CCCDAPP/${key}/${path}` : `CCCDAPP/${path}`;\n    };\n    initializeApp(firebaseConfig);\n    const db = getDatabase();\n    // MỚI: Hàm xử lý sao chép dữ liệu vào clipboard\n    const handleCopyData = () => {\n        if (!errorRecords || Object.keys(errorRecords).length === 0) {\n            showNotification(\"Không có dữ liệu để sao chép.\");\n            return;\n        }\n        // Chuyển đổi object thành mảng\n        const data = Object.values(errorRecords);\n        // Tạo các hàng dữ liệu, mỗi cột phân tách bằng TAB (\\t)\n        const dataRows = data.map((record) => {\n            // Làm sạch dữ liệu đầu vào, loại bỏ ký tự xuống dòng có thể gây lỗi\n            const cells = [\n                record.errorIndex,\n                record.maBuuGui,\n                record.Id || '',\n                record.Name || '',\n                record.NgaySinh || '',\n                record.gioiTinh || '',\n                record.DiaChi || '',\n                ,\n            ];\n            return cells.join('\\t'); // Nối các ô bằng ký tự TAB\n        });\n        // Kết hợp tiêu đề và các hàng dữ liệu, mỗi hàng phân tách bằng ký tự xuống dòng (\\n)\n        const clipboardText = [\n            ...dataRows\n        ].join('\\n');\n        // Sử dụng Clipboard API để sao chép\n        navigator.clipboard.writeText(clipboardText).then(() => {\n            showNotification(\"Đã sao chép dữ liệu vào clipboard!\");\n        }).catch(err => {\n            console.error(\"Lỗi khi sao chép: \", err);\n            showNotification(\"Không thể sao chép dữ liệu.\");\n        });\n    };\n    // MỚI: Hàm xử lý gửi mã hiệu\n    const handleSendMaHieu = () => {\n        if (!maHieu.trim()) {\n            showNotification(\"Vui lòng nhập mã hiệu.\");\n            return;\n        }\n        const refMessage = ref(db, getFirebasePath(\"message\"));\n        set(refMessage, {\n            \"Lenh\": \"sendMaHieu\",\n            \"TimeStamp\": new Date().getTime().toString(),\n            \"DoiTuong\": maHieu.trim()\n        }).then(() => {\n            showNotification(`Đã gửi mã hiệu: ${maHieu.trim()}`);\n            setMaHieu(\"\"); // Clear input after sending\n        }).catch((error) => {\n            console.error(\"Lỗi khi gửi mã hiệu:\", error);\n            showNotification(\"Không thể gửi mã hiệu.\");\n        });\n    };\n    // Firebase key management functions\n    const showFirebaseKeyDialog = () => {\n        setFirebaseKey(currentFirebaseKey);\n        setIsKeyModalVisible(true);\n    };\n    const saveFirebaseKey = () => {\n        // Key validation: alphanumeric, underscore, hyphen only, max 20 chars\n        const keyRegex = /^[a-zA-Z0-9_-]{1,20}$/;\n        if (!firebaseKey.trim()) {\n            showNotification(\"Firebase key không được để trống.\");\n            return;\n        }\n        if (!keyRegex.test(firebaseKey.trim())) {\n            showNotification(\"Firebase key chỉ được chứa chữ, số, dấu gạch dưới và gạch ngang (tối đa 20 ký tự).\");\n            return;\n        }\n        const newKey = firebaseKey.trim();\n        chrome.storage.local.set({ firebase_key: newKey }, () => {\n            setCurrentFirebaseKey(newKey);\n            setIsKeySetupComplete(true);\n            setIsKeyModalVisible(false);\n            showNotification(`Đã lưu Firebase key: ${newKey}`);\n            // Reload page to apply new Firebase paths\n            window.location.reload();\n        });\n    };\n    const clearFirebaseKey = () => {\n        chrome.storage.local.remove(['firebase_key'], () => {\n            setCurrentFirebaseKey(\"\");\n            setFirebaseKey(\"\");\n            setIsKeySetupComplete(false);\n            setIsKeyModalVisible(false);\n            showNotification(\"Đã xóa Firebase key. Sử dụng path mặc định.\");\n            // Reload page to apply default Firebase paths\n            window.location.reload();\n        });\n    };\n    const getFirebaseStatus = () => {\n        if (currentFirebaseKey) {\n            return {\n                status: \"active\",\n                message: `🔑 Firebase Key: ${currentFirebaseKey}`,\n                style: { backgroundColor: '#f6ffed', border: '1px solid #b7eb8f', color: '#389e0d' }\n            };\n        }\n        else {\n            return {\n                status: \"warning\",\n                message: \"⚠️ Chưa cấu hình Firebase key\",\n                style: { backgroundColor: '#fff7e6', border: '1px solid #ffd591', color: '#d46b08' }\n            };\n        }\n    };\n    const showNotification = (message) => {\n        // Set time only show 800ms\n        chrome.notifications.create({\n            message: message,\n            title: \"Thông báo\",\n            type: \"basic\",\n            iconUrl: \"128.jpg\",\n        }, (notificationId) => {\n            // Auto clear after 800ms\n            setTimeout(() => {\n                chrome.notifications.clear(notificationId);\n            }, 1500);\n        });\n    };\n    const handleGetDataFromPNS = async () => { };\n    const sendMessageToCurrentTab = async (data) => {\n        try {\n            const tabs = await chrome.tabs.query({});\n            // Tìm tab đầu tiên có URL bắt đầu bằng https://hanhchinhcong.vnpost.vn/\n            const targetTab = tabs.find(tab => tab.url && tab.url.startsWith(\"https://hanhchinhcong.vnpost.vn/giaodich/xac-nhan-all\"));\n            if (!targetTab || !targetTab.id) {\n                console.log(\"Không tìm thấy tab có URL bắt đầu bằng https://hanhchinhcong.vnpost.vn/giaodich/xac-nhan-all\");\n                showNotification(\"Không tìm thấy trang CCCD VNPost đang mở\");\n                return;\n            }\n            const tabId = targetTab.id;\n            // Encode the HoTen and NgaySinh parameters\n            const hoTenEncoded = encodeURIComponent(data.Name || \"\");\n            const ngaySinhEncoded = encodeURIComponent(data.NgaySinh || \"\");\n            // Tạo ngày hôm nay với format dd/MM/yyyy\n            const today = new Date();\n            const day = String(today.getDate()).padStart(2, '0');\n            const month = String(today.getMonth() + 1).padStart(2, '0'); // Tháng bắt đầu từ 0\n            const year = today.getFullYear();\n            const ngayKetThuc = `${day}/${month}/${year}`; // Format: dd/MM/yyyy\n            const ngayKetThucEncoded = encodeURIComponent(ngayKetThuc);\n            // Build the new URL with updated parameters\n            const newUrl = `https://hanhchinhcong.vnpost.vn/giaodich/xac-nhan-all?NhomThuTuc=NTT00002&MaThuTuc=TT0000007&HoTen=${hoTenEncoded}&NgaySinh=${ngaySinhEncoded}&DienThoai=&MaHoSo=&MaBuuGui=&NgayBatDau=01%2F10%2F2025&NgayKetThuc=${ngayKetThucEncoded}&QRcode=`;\n            // Update the tab URL\n            await chrome.tabs.update(tabId, { url: newUrl });\n            console.log(\"Tab URL updated successfully:\", newUrl);\n            // Đợi trang load xong\n            await new Promise((resolve) => {\n                const listener = (updatedTabId, changeInfo) => {\n                    if (updatedTabId === tabId && changeInfo.status === 'complete') {\n                        chrome.tabs.onUpdated.removeListener(listener);\n                        resolve();\n                    }\n                };\n                chrome.tabs.onUpdated.addListener(listener);\n                // Timeout sau 10s nếu không load xong\n                setTimeout(() => {\n                    chrome.tabs.onUpdated.removeListener(listener);\n                    resolve();\n                }, 10000);\n            });\n            console.log(\"Page loaded, executing automation script...\");\n            // ✅ SET FLAG TRƯỚC KHI EXECUTE SCRIPT (popup có quyền chrome.storage)\n            await chrome.storage.local.set({ waitingForModal: true });\n            console.log(\"✅ Flag 'waitingForModal' set to true BEFORE script execution\");\n            const result = await chrome.scripting.executeScript({\n                target: { tabId },\n                func: () => {\n                    return new Promise((resolve) => {\n                        // Helper function: đợi element xuất hiện\n                        function waitForElement(selector, timeout = 5000) {\n                            return new Promise((resolveWait) => {\n                                const element = document.querySelector(selector);\n                                if (element) {\n                                    resolveWait(element);\n                                    return;\n                                }\n                                const observer = new MutationObserver(() => {\n                                    const el = document.querySelector(selector);\n                                    if (el) {\n                                        observer.disconnect();\n                                        resolveWait(el);\n                                    }\n                                });\n                                observer.observe(document.body, {\n                                    childList: true,\n                                    subtree: true,\n                                });\n                                setTimeout(() => {\n                                    observer.disconnect();\n                                    resolveWait(null);\n                                }, timeout);\n                            });\n                        }\n                        // Helper: check for \"Không tìm thấy kết quả\"\n                        function waitForNoResultText(timeout = 5000) {\n                            return new Promise((resolveWait) => {\n                                const checkText = () => {\n                                    const bodyDiv = document.querySelector(\"#listTbody\");\n                                    if (bodyDiv) {\n                                        const textContent = bodyDiv.textContent || '';\n                                        if (textContent.includes(\"Không tìm thấy kết quả\")) {\n                                            return true;\n                                        }\n                                    }\n                                    return false;\n                                };\n                                if (checkText()) {\n                                    resolveWait(true);\n                                    return;\n                                }\n                                const observer = new MutationObserver(() => {\n                                    if (checkText()) {\n                                        observer.disconnect();\n                                        resolveWait(true);\n                                    }\n                                });\n                                observer.observe(document.body, {\n                                    childList: true,\n                                    subtree: true,\n                                    characterData: true\n                                });\n                                setTimeout(() => {\n                                    observer.disconnect();\n                                    resolveWait(false);\n                                }, timeout);\n                            });\n                        }\n                        // Main automation logic\n                        (async () => {\n                            try {\n                                // Race giữa checkbox xuất hiện và text \"Không tìm thấy kết quả\"\n                                const raceResult = await Promise.race([\n                                    waitForElement(\"#listTbody tr td div input\").then(el => ({ type: 'checkbox', element: el })),\n                                    waitForNoResultText().then(found => ({ type: 'noResult', found }))\n                                ]);\n                                if (raceResult.type === 'noResult') {\n                                    // Không tìm thấy kết quả\n                                    const hoTenInput = document.querySelector(\"#HoTen\");\n                                    const textTen = hoTenInput?.value || \"\";\n                                    resolve({\n                                        success: false,\n                                        reason: 'not_found',\n                                        name: textTen\n                                    });\n                                    return;\n                                }\n                                if (raceResult.type === 'checkbox') {\n                                    const checkbox = raceResult.element;\n                                    // Check checkbox\n                                    checkbox.checked = true;\n                                    checkbox.dispatchEvent(new Event('change', { bubbles: true }));\n                                    console.log(\"✓ Checkbox checked\");\n                                    // Đợi một chút cho UI update\n                                    await new Promise(r => setTimeout(r, 300));\n                                    // Kiểm tra submit button\n                                    const submitButton = document.getElementById(\"sub_xacnhan\");\n                                    if (submitButton && !submitButton.disabled) {\n                                        // Không click button nữa, thay vào đó BYPASS confirm và submit form trực tiếp\n                                        console.log(\"� Bypassing button click - executing form logic directly\");\n                                        // Lấy danh sách giao dịch IDs từ các checkbox đã chọn (giống logic trong trang web)\n                                        const giaoDichIds = [];\n                                        const checkboxes = document.querySelectorAll('.inputCheckBox:checked');\n                                        // Kiểm tra số lượng checkbox - chỉ nên có 1\n                                        if (checkboxes.length === 0) {\n                                            console.warn(\"⚠️ No checkboxes found\");\n                                            resolve({\n                                                success: false,\n                                                reason: 'no_checkbox_selected',\n                                                message: 'No checkboxes are checked'\n                                            });\n                                            return;\n                                        }\n                                        if (checkboxes.length > 1) {\n                                            console.warn(\"⚠️ Multiple records found:\", checkboxes.length);\n                                            resolve({\n                                                success: false,\n                                                reason: 'multiple_records',\n                                                message: `Found ${checkboxes.length} records - expected only 1`\n                                            });\n                                            return;\n                                        }\n                                        checkboxes.forEach((checkbox) => {\n                                            const giaoDichId = checkbox.value;\n                                            if (giaoDichId) {\n                                                giaoDichIds.push(giaoDichId);\n                                            }\n                                        });\n                                        console.log(\"📋 Collected giaoDichIds:\", giaoDichIds);\n                                        // Cập nhật input hidden trong form (giống code trang web)\n                                        const giaoDichIdsInput = document.querySelector('#xacNhan-form input[name=\"giaoDichIds\"]');\n                                        if (giaoDichIdsInput) {\n                                            giaoDichIdsInput.value = giaoDichIds.join(',');\n                                            console.log(\"✅ Updated giaoDichIds input:\", giaoDichIdsInput.value);\n                                        }\n                                        // Submit form trực tiếp (BYPASS confirm dialog hoàn toàn)\n                                        const form = document.getElementById('xacNhan-form');\n                                        if (form) {\n                                            console.log(\"📤 Submitting form (flag already set by popup)...\");\n                                            form.submit();\n                                            console.log(\"✓ Form submitted - page will reload\");\n                                            resolve({\n                                                success: true,\n                                                reason: 'submitted'\n                                            });\n                                        }\n                                        else {\n                                            resolve({\n                                                success: false,\n                                                reason: 'form_not_found',\n                                                message: 'Could not find xacNhan-form'\n                                            });\n                                        }\n                                    }\n                                    else {\n                                        resolve({\n                                            success: false,\n                                            reason: 'submit_disabled',\n                                            message: 'Submit button is disabled or not found'\n                                        });\n                                    }\n                                }\n                                else {\n                                    resolve({\n                                        success: false,\n                                        reason: 'timeout',\n                                        message: 'Checkbox not found within timeout'\n                                    });\n                                }\n                            }\n                            catch (error) {\n                                resolve({\n                                    success: false,\n                                    reason: 'error',\n                                    error: String(error)\n                                });\n                            }\n                        })();\n                    });\n                }\n            });\n            const scriptResult = result[0]?.result;\n            console.log(\"Automation result:\", scriptResult);\n            if (scriptResult) {\n                if (scriptResult.success) {\n                    console.log(\"✓ Form submitted, setting flag for modal detection after reload...\");\n                    // Đặt flag trong storage để content script biết cần chờ modal sau khi reload\n                    await chrome.storage.local.set({ waitingForModal: true });\n                    // Đợi message từ content script khi modal xuất hiện (sau khi trang reload)\n                    const modalDetected = await new Promise((resolveModal) => {\n                        const messageListener = (message) => {\n                            if (message.action === \"modalDetected\") {\n                                console.log(\"✓ Modal detection result:\", message);\n                                chrome.runtime.onMessage.removeListener(messageListener);\n                                resolveModal(message.success === true);\n                            }\n                        };\n                        chrome.runtime.onMessage.addListener(messageListener);\n                        // Timeout sau 15 giây nếu không phát hiện modal\n                        setTimeout(() => {\n                            chrome.runtime.onMessage.removeListener(messageListener);\n                            console.warn(\"⚠️ Timeout waiting for modal\");\n                            chrome.storage.local.remove(['waitingForModal']);\n                            resolveModal(false);\n                        }, 7000);\n                    });\n                    if (modalDetected) {\n                        // Hiển thị thông báo thành công trên trang web\n                        await chrome.scripting.executeScript({\n                            target: { tabId },\n                            func: (name) => {\n                                // Tạo div thông báo\n                                const notification = document.createElement('div');\n                                notification.textContent = `✓ Đã xử lý thành công: ${name}`;\n                                notification.style.cssText = `\r\n                  position: fixed;\r\n                  bottom: 20px;\r\n                  right: 20px;\r\n                  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n                  color: white;\r\n                  padding: 16px 24px;\r\n                  border-radius: 12px;\r\n                  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\r\n                  font-size: 16px;\r\n                  font-weight: 600;\r\n                  z-index: 10000;\r\n                  animation: slideIn 0.4s ease-out, fadeOut 0.4s ease-in 2.6s;\r\n                  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n                `;\n                                // Thêm animation CSS\n                                const style = document.createElement('style');\n                                style.textContent = `\r\n                  @keyframes slideIn {\r\n                    from {\r\n                      transform: translateX(400px);\r\n                      opacity: 0;\r\n                    }\r\n                    to {\r\n                      transform: translateX(0);\r\n                      opacity: 1;\r\n                    }\r\n                  }\r\n                  @keyframes fadeOut {\r\n                    from {\r\n                      opacity: 1;\r\n                    }\r\n                    to {\r\n                      opacity: 0;\r\n                    }\r\n                  }\r\n                `;\n                                document.head.appendChild(style);\n                                document.body.appendChild(notification);\n                                // Tự động xóa sau 3 giây\n                                setTimeout(() => {\n                                    notification.remove();\n                                    style.remove();\n                                }, 2000);\n                            },\n                            args: [data.Name || \"\"]\n                        });\n                        // Gửi message về Firebase nếu auto mode\n                        const refMessage = ref(db, getFirebasePath(\"message\"));\n                        await set(refMessage, {\n                            \"Lenh\": \"continueCCCD\",\n                            \"TimeStamp\": new Date().getTime().toString(),\n                            \"DoiTuong\": \"\"\n                        });\n                    }\n                    else {\n                        showNotification(`⚠ Không phát hiện modal xác nhận`);\n                    }\n                }\n                else if (scriptResult.reason === 'not_found') {\n                    showNotification(`✗ Không tìm thấy: ${scriptResult.name || data.Name || \"\"}`);\n                    // Gửi message về Firebase\n                    const refMessage = ref(db, getFirebasePath(\"message\"));\n                    await set(refMessage, {\n                        \"Lenh\": \"notFound\",\n                        \"TimeStamp\": new Date().getTime().toString(),\n                        \"DoiTuong\": scriptResult.name || \"\"\n                    });\n                }\n                else if (scriptResult.reason === 'multiple_records') {\n                    showNotification(`⚠️ Tìm thấy nhiều bản ghi: ${scriptResult.message || \"\"}`);\n                    // Gửi message về Firebase - trường hợp trùng lặp\n                    const refMessage = ref(db, getFirebasePath(\"message\"));\n                    await set(refMessage, {\n                        \"Lenh\": \"multipleRecords\",\n                        \"TimeStamp\": new Date().getTime().toString(),\n                        \"DoiTuong\": data.Name || \"\"\n                    });\n                }\n                else {\n                    showNotification(`⚠ Lỗi: ${scriptResult.message || scriptResult.reason}`);\n                }\n            }\n        }\n        catch (error) {\n            console.error(\"Error in sendMessageToCurrentTab:\", error);\n            showNotification(\"Có lỗi xảy ra khi xử lý\");\n        }\n    };\n    // Firebase listeners effect - chỉ chạy sau khi currentFirebaseKey đã được load\n    useEffect(() => {\n        // Đợi cho đến khi Chrome storage đã load xong\n        // currentFirebaseKey sẽ là \"\" (empty) hoặc có giá trị thực\n        // isKeySetupComplete sẽ cho biết đã hoàn thành việc load từ storage chưa\n        console.log(\"Firebase effect triggered. Key:\", currentFirebaseKey, \"Setup complete:\", isKeySetupComplete);\n        // Tạo Firebase refs với key hiện tại (có thể là \"\" cho default path)\n        const refCCCD = ref(db, getFirebasePath(\"cccd\"));\n        const refIsAuto = ref(db, getFirebasePath(\"cccdauto\"));\n        const refErrorRecords = ref(db, getFirebasePath(\"errorcccd/records\"));\n        console.log(\"Firebase paths:\", {\n            cccd: getFirebasePath(\"cccd\"),\n            auto: getFirebasePath(\"cccdauto\"),\n            error: getFirebasePath(\"errorcccd/records\")\n        });\n        let isFirstRun = true;\n        let isFirstErrorRun = true;\n        let isFirstAutoRun = true;\n        const unsubcribeCCCD = onValue(refCCCD, (snapshot) => {\n            const data = snapshot.val();\n            console.log(\"CCCD data received:\", data, \"with key:\", currentFirebaseKey);\n            if (isFirstRun) {\n                isFirstRun = false;\n                return;\n            }\n            else {\n                if (data && data.Name != \"\") {\n                    sendMessageToCurrentTab(data);\n                }\n                else {\n                    console.log(\"Không có dữ liệu CCCD để gửi\");\n                }\n            }\n        });\n        const unsubscribeIsAuto = onValue(refIsAuto, (snapshot) => {\n            const data = snapshot.val();\n            console.log(\"Auto state received:\", data, \"with key:\", currentFirebaseKey);\n            if (isFirstAutoRun) {\n                isFirstAutoRun = false;\n                return;\n            }\n            // Auto state is monitored but handled by sendMessageToCurrentTab flow\n        });\n        const unsubscribeErrorRecords = onValue(refErrorRecords, (snapshot) => {\n            const data = snapshot.val();\n            console.log(\"Error records received:\", data, \"with key:\", currentFirebaseKey);\n            if (isFirstErrorRun) {\n                isFirstErrorRun = false;\n                if (data)\n                    setErrorRecords(data);\n                return;\n            }\n            console.log(\"Đã nhận được cập nhật dữ liệu lỗi:\", data);\n            setErrorRecords(data);\n            if (data) {\n                const recordCount = Object.keys(data).length;\n                showNotification(`Đã đồng bộ ${recordCount} bản ghi lỗi.`);\n            }\n        });\n        // Không còn cần message listener vì automation được xử lý trực tiếp trong sendMessageToCurrentTab\n        // Tất cả logic automation giờ chạy qua chrome.scripting.executeScript\n        return () => {\n            console.log(\"Cleaning up Firebase listeners for key:\", currentFirebaseKey);\n            unsubcribeCCCD();\n            unsubscribeIsAuto();\n            unsubscribeErrorRecords();\n        };\n    }, [currentFirebaseKey]); // Chỉ depend vào currentFirebaseKey\n    return (_jsxs(\"div\", { className: \"m-5\", children: [_jsxs(Space, { direction: \"vertical\", style: { width: '100%' }, children: [_jsx(\"div\", { style: {\n                            padding: '12px',\n                            borderRadius: '6px',\n                            ...getFirebaseStatus().style\n                        }, children: _jsxs(\"div\", { style: { display: 'flex', justifyContent: 'space-between', alignItems: 'center' }, children: [_jsx(\"span\", { style: { fontSize: '13px', fontWeight: 'bold' }, children: getFirebaseStatus().message }), isKeySetupComplete ? (_jsx(Button, { size: \"small\", type: \"text\", icon: _jsx(EditOutlined, {}), onClick: showFirebaseKeyDialog, children: \"S\\u1EEDa\" })) : (_jsx(Button, { size: \"small\", type: \"primary\", icon: _jsx(PlusOutlined, {}), onClick: showFirebaseKeyDialog, children: \"Th\\u00EAm Key\" }))] }) }), _jsxs(Space, { children: [_jsx(Button, { onClick: handleGetDataFromPNS, type: \"primary\", icon: _jsx(RedoOutlined, {}), children: \"Ch\\u1EA1y\" }), _jsx(Button, { onClick: handleCopyData, type: \"primary\", icon: _jsx(CopyOutlined, {}), disabled: !errorRecords || Object.keys(errorRecords).length === 0, children: \"Sao ch\\u00E9p B\\u1EA3ng\" })] }), _jsxs(Space, { direction: \"vertical\", style: { width: '100%' }, children: [_jsx(\"h4\", { style: { margin: '10px 0 5px 0', fontSize: '14px', fontWeight: 'bold' }, children: \"G\\u1EEDi M\\u00E3 Hi\\u1EC7u\" }), _jsxs(Space, { style: { width: '100%' }, children: [_jsx(Input, { placeholder: \"Nh\\u1EADp m\\u00E3 hi\\u1EC7u...\", value: maHieu, onChange: (e) => setMaHieu(e.target.value), onPressEnter: handleSendMaHieu, style: { flex: 1, width: 200 } }), _jsx(Button, { onClick: handleSendMaHieu, type: \"primary\", icon: _jsx(SendOutlined, {}), disabled: !maHieu.trim(), children: \"G\\u1EEDi M\\u00E3 Hi\\u1EC7u\" })] })] }), errorRecords && (_jsxs(\"div\", { children: [_jsx(\"h3\", { style: { marginTop: '15px' }, children: \"Danh s\\u00E1ch l\\u1ED7i \\u0111\\u00E3 \\u0111\\u1ED3ng b\\u1ED9:\" }), _jsx(\"pre\", { style: { maxHeight: '200px', overflow: 'auto', background: '#f0f0f0', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }, children: JSON.stringify(errorRecords, null, 2) })] }))] }), _jsx(Modal, { title: \"C\\u1EA5u h\\u00ECnh Firebase Key\", open: isKeyModalVisible, onOk: saveFirebaseKey, onCancel: () => setIsKeyModalVisible(false), okText: \"L\\u01B0u\", cancelText: \"H\\u1EE7y\", footer: [\n                    currentFirebaseKey && (_jsx(Button, { danger: true, onClick: clearFirebaseKey, style: { float: 'left' }, children: \"X\\u00F3a Key\" }, \"clear\")),\n                    _jsx(Button, { onClick: () => setIsKeyModalVisible(false), children: \"H\\u1EE7y\" }, \"cancel\"),\n                    _jsx(Button, { type: \"primary\", onClick: saveFirebaseKey, children: \"L\\u01B0u\" }, \"save\")\n                ], children: _jsxs(Space, { direction: \"vertical\", style: { width: '100%' }, children: [currentFirebaseKey && (_jsxs(\"div\", { children: [_jsx(\"strong\", { children: \"Key hi\\u1EC7n t\\u1EA1i:\" }), \" \", currentFirebaseKey] })), _jsxs(\"div\", { children: [_jsx(\"strong\", { children: \"Key m\\u1EDBi:\" }), _jsx(Input, { placeholder: \"Nh\\u1EADp Firebase key (v\\u00ED d\\u1EE5: user123, room001)\", value: firebaseKey, onChange: (e) => setFirebaseKey(e.target.value), maxLength: 20, style: { marginTop: '8px' } }), _jsx(\"div\", { style: { fontSize: '12px', color: '#666', marginTop: '4px' }, children: \"Ch\\u1EC9 \\u0111\\u01B0\\u1EE3c ch\\u1EE9a ch\\u1EEF, s\\u1ED1, d\\u1EA5u g\\u1EA1ch d\\u01B0\\u1EDBi (_) v\\u00E0 g\\u1EA1ch ngang (-). T\\u1ED1i \\u0111a 20 k\\u00FD t\\u1EF1.\" })] })] }) })] }));\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport popupSlice from \"./popup.slice\";\nexport const store = configureStore({\n    reducer: {\n        popup: popupSlice,\n    },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_css-loader_dist_runtime_api_js-node_modules_css-loader_dist_runtime_sour-7f547c\",\"vendors-node_modules_ant-design_icons_es_icons_CopyOutlined_js-node_modules_ant-design_icons_-3fcc3d\"], () => (__webpack_require__(\"./src/popup/index.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}