{"version":3,"file":"contentScript.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/contentScript/contentScript.tsx"],"sourcesContent":["\"use strict\";\n// Wait for element to appear in DOM\nfunction waitForElm(selector, timeout = 10000) {\n    return new Promise((resolve) => {\n        const element = document.querySelector(selector);\n        if (element) {\n            return resolve(element);\n        }\n        const observer = new MutationObserver(() => {\n            const element = document.querySelector(selector);\n            if (element) {\n                observer.disconnect();\n                resolve(element);\n            }\n        });\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n        });\n        // Timeout để tránh đợi vô hạn\n        setTimeout(() => {\n            observer.disconnect();\n            resolve(null);\n        }, timeout);\n    });\n}\n// Hàm kiểm tra và xử lý modal detection\nfunction checkAndHandleModalDetection() {\n    chrome.storage.local.get(['waitingForModal'], (result) => {\n        if (result.waitingForModal) {\n            console.log(\"✓ ContentScript: Found pending modal detection request\");\n            // Kiểm tra ngay lập tức xem modal đã tồn tại chưa (trường hợp modal xuất hiện rất nhanh)\n            const existingModal = document.querySelector(\"#flash-overlay-modal\");\n            if (existingModal) {\n                console.log(\"✓ CCCD ContentScript: Modal ALREADY EXISTS on page!\");\n                // Đặt thành false\n                chrome.storage.local.remove(['waitingForModal']);\n                // Gửi message về popup/background\n                chrome.runtime.sendMessage({\n                    action: \"modalDetected\",\n                    success: true\n                }).catch(err => {\n                    console.log(\"Failed to send message:\", err);\n                });\n                return;\n            }\n            // Nếu chưa có, bắt đầu chờ modal xuất hiện\n            console.log(\"⏳ ContentScript: Modal not found yet, starting to wait...\");\n            waitForElm(\"#flash-overlay-modal\", 7000).then((elm) => {\n                if (elm) {\n                    console.log(\"✓ CCCD ContentScript: Modal detected after waiting!\");\n                    // Xóa flag\n                    chrome.storage.local.remove(['waitingForModal']);\n                    // Gửi message về popup/background\n                    chrome.runtime.sendMessage({\n                        action: \"modalDetected\",\n                        success: true\n                    }).catch(err => {\n                        console.log(\"Failed to send message:\", err);\n                    });\n                }\n                else {\n                    console.log(\"⚠️ ContentScript: Modal not found within timeout\");\n                    chrome.storage.local.remove(['waitingForModal']);\n                    chrome.runtime.sendMessage({\n                        action: \"modalDetected\",\n                        success: false,\n                        reason: \"timeout\"\n                    }).catch(err => {\n                        console.log(\"Failed to send message:\", err);\n                    });\n                }\n            });\n        }\n    });\n}\n// Sử dụng DOMContentLoaded thay vì load để phản ứng nhanh hơn\nif (document.readyState === 'loading') {\n    // DOM chưa ready, đợi DOMContentLoaded\n    document.addEventListener('DOMContentLoaded', () => {\n        console.log(\"✓ CCCD ContentScript: DOMContentLoaded fired\");\n        checkAndHandleModalDetection();\n    });\n}\nelse {\n    // DOM đã ready (script được inject muộn), chạy ngay\n    console.log(\"✓ CCCD ContentScript: DOM already ready, checking immediately\");\n    checkAndHandleModalDetection();\n}\nconsole.log(\"✓ CCCD ContentScript loaded - Monitoring mode active\");\n"],"names":[],"sourceRoot":""}