{"version":3,"file":"background.js","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./src/background/background.ts"],"sourcesContent":["\"use strict\";\n// background.ts (MV3 service worker)\n// ==================== MODAL DETECTION SYSTEM ====================\n// Listener để phát hiện modal sau khi trang reload\nchrome.tabs.onUpdated.addListener((updatedTabId, info, _tab) => {\n    if (info.status === \"complete\") {\n        chrome.storage.session.get(['waitingForModalTab']).then(({ waitingForModalTab }) => {\n            if (waitingForModalTab === updatedTabId) {\n                console.log(\"✅ Background: Tab reloaded completely, injecting modal detector...\");\n                // Inject script để kiểm tra modal\n                chrome.scripting.executeScript({\n                    target: { tabId: updatedTabId },\n                    func: () => {\n                        // Helper function: đợi element xuất hiện\n                        function waitForElm(selector, timeout = 10000) {\n                            return new Promise((resolve) => {\n                                const element = document.querySelector(selector);\n                                if (element) {\n                                    console.log(`✅ Modal \"${selector}\" đã tồn tại ngay lập tức!`);\n                                    return resolve(element);\n                                }\n                                const observer = new MutationObserver(() => {\n                                    const element = document.querySelector(selector);\n                                    if (element) {\n                                        console.log(`✅ Modal \"${selector}\" xuất hiện sau khi chờ!`);\n                                        observer.disconnect();\n                                        resolve(element);\n                                    }\n                                });\n                                observer.observe(document.body, {\n                                    childList: true,\n                                    subtree: true,\n                                });\n                                setTimeout(() => {\n                                    observer.disconnect();\n                                    console.log(`⚠️ Timeout waiting for modal \"${selector}\"`);\n                                    resolve(null);\n                                }, timeout);\n                            });\n                        }\n                        // Bắt đầu chờ modal\n                        console.log(\"🔍 Starting modal detection...\");\n                        waitForElm(\"#flash-overlay-modal\").then((elm) => {\n                            if (elm) {\n                                console.log(\"✅ MODAL DETECTED! Sending message to background...\");\n                                // ✅ Send message về background (script context có thể gọi chrome.runtime)\n                                chrome.runtime.sendMessage({\n                                    action: \"modalDetected\",\n                                    success: true,\n                                    timestamp: Date.now()\n                                });\n                            }\n                            else {\n                                console.log(\"❌ Modal not found within timeout\");\n                                chrome.runtime.sendMessage({\n                                    action: \"modalDetected\",\n                                    success: false,\n                                    reason: \"timeout\",\n                                    timestamp: Date.now()\n                                });\n                            }\n                        });\n                    }\n                }).then(() => {\n                    console.log(\"✓ Background: Modal detector script injected successfully\");\n                    // ❌ KHÔNG XÓA FLAG Ở ĐÂY - để script trong tab tự xóa sau khi detect xong\n                }).catch(err => {\n                    console.error(\"❌ Background: Failed to inject modal detector:\", err);\n                    // Cleanup flag trên lỗi\n                    chrome.storage.session.remove(['waitingForModalTab']);\n                });\n            }\n        });\n    }\n});\n// ✅ Listener nhận message từ modal detector script và lưu vào storage\nchrome.runtime.onMessage.addListener((message, _sender, _sendResponse) => {\n    if (message.action === \"modalDetected\") {\n        console.log(\"📨 Background received modal detection result:\", message);\n        // Lưu kết quả vào storage\n        chrome.storage.session.set({\n            modalDetectionResult: {\n                success: message.success,\n                reason: message.reason,\n                timestamp: message.timestamp || Date.now()\n            }\n        }).then(() => {\n            console.log(\"✅ Background saved modal result to storage:\", message.success);\n            // Cleanup flag\n            chrome.storage.session.remove(['waitingForModalTab']);\n        });\n    }\n});\nconsole.log(\"✅ CCCD Background Service Worker loaded - Modal detection ready\");\n"],"names":[],"sourceRoot":""}